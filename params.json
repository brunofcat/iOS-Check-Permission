{"name":"iOS-Check-Permission","tagline":"Permits the user request for permission access the operating system's (Calendar , Reminder, Gallery and Location), with the objective-c block support.","body":"# iOS-Check-Permission\r\n\r\nThe purpose of this library is to provide an easy way to request iOS resource permissions. Abstract the complexity and provide a feedback using blocks of Objective-C language.\r\n\r\nSee more on Youtube video:\r\n\r\n- https://www.youtube.com/watch?v=JxdlaEp6dC0\r\n\r\n<a href=\"https://www.youtube.com/embed/JxdlaEp6dC0\"><img src=\"screenshot3.png\" width=\"800\"></a>\r\n\r\nThere are 7 methods to use in the library:\r\n\r\n<pre>\r\n- (void)checkPermissionAccessForCalendar:(void(^)(void))successBlock \r\n                             failureBlock:(void(^)(void))failureBlock;\r\n                           \r\n- (void)checkPermissionAccessForCalendar:(void(^)(void))successBlock\r\n                           failureBlock:(void(^)(void))failureBlock\r\n       authorizationStatusNotDetermined:(void(^)(void))statusNotDeterminedBlock;\r\n\r\n- (void)checkPermissionAccessForReminder:(void(^)(void))successBlock\r\n                             failureBlock:(void(^)(void))failureBlock;\r\n\r\n- (void)checkPermissionAccessForReminder:(void(^)(void))successBlock\r\n                             failureBlock:(void(^)(void))failureBlock\r\n         authorizationStatusNotDetermined:(void(^)(void))statusNotDeterminedBlock;\r\n\r\n- (void)checkPermissionAccessForGallery:(void (^) (void))successBlock\r\n                             failureBlock:(void (^) (void))failureBlock;\r\n\r\n- (void)checkPermissionAccessForGallery:(void (^) (void))successBlock\r\n                            failureBlock:(void (^) (void))failureBlock\r\n        authorizationStatusNotDetermined:(void(^)(void))statusNotDeterminedBlock;\r\n        \r\n- (void)checkPermissionAccessForLocation:(enum AuthorizeRequestType) type\r\n                                                  successBlock:(void (^) (void))successBlock\r\n                                                  failureBlock:(void (^) (void))failureBlock;\r\n        \r\n</pre>\r\n\r\n\r\n## CocoaPod\r\n\r\n[![CI Status](http://img.shields.io/travis/Douglas Frari/iOS-Check-Permission.svg?style=flat)](https://travis-ci.org/Douglas Frari/iOS-Check-Permission)\r\n[![Version](https://img.shields.io/cocoapods/v/iOS-Check-Permission.svg?style=flat)](http://cocoapods.org/pods/iOS-Check-Permission)\r\n[![License](https://img.shields.io/cocoapods/l/iOS-Check-Permission.svg?style=flat)](http://cocoapods.org/pods/iOS-Check-Permission)\r\n[![Platform](https://img.shields.io/cocoapods/p/iOS-Check-Permission.svg?style=flat)](http://cocoapods.org/pods/iOS-Check-Permission)\r\n\r\n## Usage\r\n\r\nTo run the example project, clone the repo, and run `pod install` from the Example directory first.\r\n\r\n## Requirements\r\n\r\n## Installation\r\n\r\niOS-Check-Permission is available through [CocoaPods](http://cocoapods.org). To install\r\nit, simply add the following line to your Podfile:\r\n\r\n```ruby\r\npod \"iOS-Check-Permission\"\r\n```\r\n\r\n## Author\r\n\r\nDouglas Frari, douglas.frari@gmail.com\r\n\r\n## License\r\n\r\niOS-Check-Permission is available under the MIT license. See the LICENSE file for more info.\r\n\r\n\r\n<img src=\"screenshot01.png\" width=\"400\">\r\n\r\nRequests permission to access the iOS (Calendar, Reminder, Gallery and Location), with\r\n option of receive the notification of the status not determined until receive the user's permission.\r\n\r\nExample of use:\r\n\r\n<img src=\"screenshot02.png\" width=\"800\"> ","google":"UA-65998417-1","note":"Don't delete this file! It's used internally to help with page regeneration."}